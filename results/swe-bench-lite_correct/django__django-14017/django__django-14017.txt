diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py
--- a/django/db/models/query_utils.py
+++ b/django/db/models/query_utils.py
@@ -40,11 +40,14 @@
         super().__init__(children=[*args, *sorted(kwargs.items())], connector=_connector, negated=_negated)
 
     def _combine(self, other, conn):
-        if not isinstance(other, Q):
+        from django.db.models.expressions import Exists
+    
+        # If the other object is not a Q instance but an Exists instance, handle separately
+        if not isinstance(other, (Q, Exists)):
             raise TypeError(other)
 
         # If the other Q() is empty, ignore it and just use `self`.
-        if not other:
+        if isinstance(other, Q) and not other:
             _, args, kwargs = self.deconstruct()
             return type(self)(*args, **kwargs)
         # Or if this Q is empty, ignore it and just use `other`.
