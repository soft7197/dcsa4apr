{
    "bug_id": "sphinx-doc__sphinx-8721",
    "problem_statement": "viewcode creates pages for epub even if `viewcode_enable_epub=False` on `make html epub`\n**Describe the bug**\r\nviewcode creates pages for epub even if `viewcode_enable_epub=False` on `make html epub`\r\n\r\n**To Reproduce**\r\n```\r\n$ make html epub\r\n```\r\n\r\n**Expected behavior**\r\nmodule pages should not be created for epub by default.\r\n\r\n**Your project**\r\nNo\r\n\r\n**Screenshots**\r\nNo\r\n\r\n**Environment info**\r\n- OS: Mac\r\n- Python version: 3.9.1\r\n- Sphinx version: HEAD of 3.x\r\n- Sphinx extensions:  sphinx.ext.viewcode\r\n- Extra tools: No\r\n\r\n**Additional context**\r\nNo\r\n\n",
    "dev_patch": "diff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py\n--- a/sphinx/ext/viewcode.py\n+++ b/sphinx/ext/viewcode.py\n@@ -182,6 +182,10 @@ def collect_pages(app: Sphinx) -> Generator[Tuple[str, Dict[str, Any], str], Non\n     env = app.builder.env\n     if not hasattr(env, '_viewcode_modules'):\n         return\n+    if app.builder.name == \"singlehtml\":\n+        return\n+    if app.builder.name.startswith(\"epub\") and not env.config.viewcode_enable_epub:\n+        return\n     highlighter = app.builder.highlighter  # type: ignore\n     urito = app.builder.get_relative_uri\n \n",
    "our_patch": "diff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py\n--- a/sphinx/ext/viewcode.py\n+++ b/sphinx/ext/viewcode.py\n@@ -186,6 +186,12 @@\n     urito = app.builder.get_relative_uri\n \n     modnames = set(env._viewcode_modules)  # type: ignore\n+\n+    # Check if viewcode pages should be generated for EPUB\n+    is_epub_builder = app.builder.name == 'epub'\n+    viewcode_enable_epub = getattr(env.config, 'viewcode_enable_epub', False)\n+    if is_epub_builder and not viewcode_enable_epub:\n+        return\n \n     for modname, entry in status_iterator(\n             sorted(env._viewcode_modules.items()),  # type: ignore\n",
    "final_iteration": 1,
    "buggy_methods": [
        "sphinx/ext/viewcode.py::collect_pages"
    ],
    "num_buggy_methods": 1
}