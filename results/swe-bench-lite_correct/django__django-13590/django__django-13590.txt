diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -1075,12 +1075,16 @@
                 self, reuse=can_reuse, allow_joins=allow_joins,
             )
         elif isinstance(value, (list, tuple)):
-            # The items of the iterable may be expressions and therefore need
-            # to be resolved independently.
-            return type(value)(
+            # Resolve each item in the iterable independently.
+            resolved_values = (
                 self.resolve_lookup_value(sub_value, can_reuse, allow_joins)
                 for sub_value in value
             )
+            # If the original value is a named tuple, use _make to convert back.
+            if hasattr(value, '_fields'):
+                return type(value)._make(resolved_values)
+            else:
+                return type(value)(resolved_values)
         return value
 
     def solve_lookup_type(self, lookup):
