diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -113,6 +113,8 @@
     """Used to convert the :members: option to auto directives."""
     if arg in (None, True):
         return 'object'
+    elif isinstance(arg, str):
+        return {x.strip() for x in arg.split(',') if x.strip()}
     else:
         return arg
 
@@ -681,8 +683,12 @@
         """
         def is_filtered_inherited_member(name: str, obj: Any) -> bool:
             if inspect.isclass(self.object):
+                inherited_classes = self.options.inherited_members
+                if isinstance(inherited_classes, str):
+                    inherited_classes = {inherited_classes}
+
                 for cls in self.object.__mro__:
-                    if cls.__name__ == self.options.inherited_members and cls != self.object:
+                    if cls.__name__ in inherited_classes and cls != self.object:
                         # given member is a member of specified *super class*
                         return True
                     elif name in cls.__dict__:
