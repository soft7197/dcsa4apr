diff --git a/django/utils/decorators.py b/django/utils/decorators.py
--- a/django/utils/decorators.py
+++ b/django/utils/decorators.py
@@ -38,9 +38,11 @@
         # 'func'. Also, wrap method.__get__() in a function because new
         # attributes can't be set on bound method objects, only on functions.
         bound_method = partial(method.__get__(self, type(self)))
+        # Using wraps to ensure bound_method has the necessary attributes
+        wrapped_bound_method = wraps(method)(bound_method)
         for dec in decorators:
-            bound_method = dec(bound_method)
-        return bound_method(*args, **kwargs)
+            wrapped_bound_method = dec(wrapped_bound_method)
+        return wrapped_bound_method(*args, **kwargs)
 
     # Copy any attributes that a decorator adds to the function it decorates.
     for dec in decorators:
