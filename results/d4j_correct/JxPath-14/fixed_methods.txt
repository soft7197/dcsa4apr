### Fixed Method 1
protected Object functionFloor(EvalContext context) {
    assertArgCount(1);
    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));
    if (Double.isNaN(v)) return Double.NaN;
    if (v == Double.POSITIVE_INFINITY) return Double.POSITIVE_INFINITY;
    if (v == Double.NEGATIVE_INFINITY) return Double.NEGATIVE_INFINITY;
    return new Double(Math.floor(v));
}


### Fixed Method 2
protected Object functionCeiling(EvalContext context) {
    assertArgCount(1);
    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));
    if (Double.isNaN(v)) return Double.NaN;
    if (v == Double.POSITIVE_INFINITY) return Double.POSITIVE_INFINITY;
    if (v == Double.NEGATIVE_INFINITY) return Double.NEGATIVE_INFINITY;
    return new Double(Math.ceil(v));
}


### Fixed Method 3
protected Object functionRound(EvalContext context) {
    assertArgCount(1);
    double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));
    if (Double.isNaN(v)) return Double.NaN;
    if (v == Double.POSITIVE_INFINITY) return Double.POSITIVE_INFINITY;
    if (v == Double.NEGATIVE_INFINITY) return Double.NEGATIVE_INFINITY;
    return new Double(Math.round(v));
}
