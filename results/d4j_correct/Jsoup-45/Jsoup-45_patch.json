{
    "bug_id": "Jsoup-45",
    "success": true,
    "error": null,
    "patch": null,
    "project_path": "/tmp/d4j_Jsoup-45_1756721200",
    "patches": [
        {
            "hypothesis": "The issue is caused by a typo in the conditional check for 'th' elements. The condition incorrectly checks for 'td' twice instead of checking both 'td' and 'th'. This causes the incorrect transition state to be set when encountering a 'th' element.",
            "changes": "- else if ((\"td\".equals(name) || \"td\".equals(name) && !last)) {\n+ else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) {",
            "fixed_method": "void resetInsertionMode() {\n    boolean last = false;\n    for (int pos = stack.size() -1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        if (pos == 0) {\n            last = true;\n            node = contextElement;\n        }\n        String name = node.nodeName();\n        if (\"select\".equals(name)) {\n            transition(HtmlTreeBuilderState.InSelect);\n            break; // frag\n        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) {\n            transition(HtmlTreeBuilderState.InCell);\n            break;\n        } else if (\"tr\".equals(name)) {\n            transition(HtmlTreeBuilderState.InRow);\n            break;\n        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTableBody);\n            break;\n        } else if (\"caption\".equals(name)) {\n            transition(HtmlTreeBuilderState.InCaption);\n            break;\n        } else if (\"colgroup\".equals(name)) {\n            transition(HtmlTreeBuilderState.InColumnGroup);\n            break; // frag\n        } else if (\"table\".equals(name)) {\n            transition(HtmlTreeBuilderState.InTable);\n            break;\n        } else if (\"head\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break; // frag\n        } else if (\"body\".equals(name)) {\n            transition(HtmlTreeBuilderState.InBody);\n            break;\n        } else if (\"frameset\".equals(name)) {\n            transition(HtmlTreeBuilderState.InFrameset);\n            break; // frag\n        } else if (\"html\".equals(name)) {\n            transition(HtmlTreeBuilderState.BeforeHead);\n            break; // frag\n        } else if (last) {\n            transition(HtmlTreeBuilderState.InBody);\n            break; // frag\n        }\n    }\n}",
            "diff": "--- original\n+++ fixed\n@@ -0,0 +1,48 @@\n+void resetInsertionMode() {\n+    boolean last = false;\n+    for (int pos = stack.size() -1; pos >= 0; pos--) {\n+        Element node = stack.get(pos);\n+        if (pos == 0) {\n+            last = true;\n+            node = contextElement;\n+        }\n+        String name = node.nodeName();\n+        if (\"select\".equals(name)) {\n+            transition(HtmlTreeBuilderState.InSelect);\n+            break; // frag\n+        } else if ((\"td\".equals(name) || \"th\".equals(name)) && !last) {\n+            transition(HtmlTreeBuilderState.InCell);\n+            break;\n+        } else if (\"tr\".equals(name)) {\n+            transition(HtmlTreeBuilderState.InRow);\n+            break;\n+        } else if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name)) {\n+            transition(HtmlTreeBuilderState.InTableBody);\n+            break;\n+        } else if (\"caption\".equals(name)) {\n+            transition(HtmlTreeBuilderState.InCaption);\n+            break;\n+        } else if (\"colgroup\".equals(name)) {\n+            transition(HtmlTreeBuilderState.InColumnGroup);\n+            break; // frag\n+        } else if (\"table\".equals(name)) {\n+            transition(HtmlTreeBuilderState.InTable);\n+            break;\n+        } else if (\"head\".equals(name)) {\n+            transition(HtmlTreeBuilderState.InBody);\n+            break; // frag\n+        } else if (\"body\".equals(name)) {\n+            transition(HtmlTreeBuilderState.InBody);\n+            break;\n+        } else if (\"frameset\".equals(name)) {\n+            transition(HtmlTreeBuilderState.InFrameset);\n+            break; // frag\n+        } else if (\"html\".equals(name)) {\n+            transition(HtmlTreeBuilderState.BeforeHead);\n+            break; // frag\n+        } else if (last) {\n+            transition(HtmlTreeBuilderState.InBody);\n+            break; // frag\n+        }\n+    }\n+}",
            "file_path": "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java",
            "method_name": "resetInsertionMode",
            "class_name": "HtmlTreeBuilder",
            "iteration": 1,
            "is_multi_method": false,
            "line_numbers": [
                382,
                383,
                384,
                385,
                386,
                387,
                388,
                389,
                390,
                391,
                392,
                393,
                394,
                395,
                396,
                397,
                398,
                399,
                400,
                401,
                402,
                403,
                404,
                405,
                406,
                407,
                408,
                409,
                410,
                411,
                412,
                413,
                414,
                415,
                416,
                417,
                418,
                419,
                420,
                421,
                422,
                423,
                424,
                425,
                426,
                427,
                428,
                429
            ]
        }
    ],
    "iterations": 1,
    "monitor_file": "traces/Jsoup-45_trace.json"
}