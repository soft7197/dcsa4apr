### Fixed Method 1
public int translate(CharSequence input, int index, Writer out) throws IOException {
    // Check input length to prevent ArrayIndexOutOfBoundsException
    if (input == null || index < 0 || index >= input.length() - 1) {
        return 0;
    }
    
    if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
        int start = index + 2;
        boolean isHex = false;

        // Check bounds before accessing the start character
        if (start >= input.length()) {
            return 0;
        }

        char firstChar = input.charAt(start);
        if (firstChar == 'x' || firstChar == 'X') {
            start++;
            isHex = true;
        }

        int end = start;
        // Ensure we don't run past the input length
        while (end < input.length() && input.charAt(end) != ';') {
            end++;
        }

        // If no semicolon was found, return 0
        if (end >= input.length() || input.charAt(end) != ';') {
            return 0;
        }

        int entityValue;
        try {
            if (isHex) {
                entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
            } else {
                entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
            }
        } catch (NumberFormatException nfe) {
            return 0;
        }

        // Convert the entity value to a string and write it to the output
        out.write(Character.toChars(entityValue));
        return 2 + (end - start) + (isHex ? 1 : 0) + 1;
    }
    return 0;
}
