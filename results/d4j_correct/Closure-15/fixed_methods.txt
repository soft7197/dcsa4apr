### Fixed Method 1
// scope.
public boolean apply(Node n) {
  // When the node is null it means, we reached the implicit return
  // where the function returns (possibly without an return statement)
  if (n == null) {
    return false;
  }

  // We care about calls to functions that
  // pass one of the dependent variables to a non-side-effect free function.
  if ((n.isCall() && NodeUtil.functionCallHasSideEffects(n)) ||
      (n.isNew() && NodeUtil.constructorCallHasSideEffects(n))) {
    return true;
  }

  // Identify 'in' and 'delete' operations on property lookups with side-effects
  if (n.isIn() || n.isDelProp()) {
    return true;
  }

  for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
    if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
      return true;
    }
  }
  return false;
}
