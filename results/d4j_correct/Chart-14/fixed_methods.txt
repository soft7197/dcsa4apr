### Fixed Method 1
public boolean removeRangeMarker(int index, Marker marker, Layer layer, boolean notify) {
    if (marker == null) {
        throw new IllegalArgumentException("Null 'marker' argument.");
    }
    ArrayList markers;
    if (layer == Layer.FOREGROUND) {
        markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(index));
    }
    else {
        markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(index));
    }
    boolean removed = markers != null && markers.remove(marker);
    if (removed && notify) {
        fireChangeEvent();
    }
    return removed;
}


### Fixed Method 2
public boolean removeDomainMarker(int index, Marker marker, Layer layer, boolean notify) {
        ArrayList markers;
        if (layer == Layer.FOREGROUND) {
            markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(index));
        }
        else {
            markers = (ArrayList) this.backgroundDomainMarkers.get(new Integer(index));
        }
        boolean removed = (markers != null) && markers.remove(marker);
        if (removed && notify) {
            fireChangeEvent();
        }
        return removed;
    }


### Fixed Method 3
public boolean removeRangeMarker(int index, Marker marker, Layer layer, boolean notify) {
    if (marker == null) {
        throw new IllegalArgumentException("Null 'marker' argument.");
    }
    ArrayList markers;
    if (layer == Layer.FOREGROUND) {
        markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(index));
    } else {
        markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(index));
    }
    boolean removed = false;
    if (markers != null) {
        removed = markers.remove(marker);
    }
    if (removed && notify) {
        fireChangeEvent();
    }
    return removed;
}


### Fixed Method 4
public boolean removeDomainMarker(int index, Marker marker, Layer layer, boolean notify) {
    ArrayList markers;
    if (layer == Layer.FOREGROUND) {
        markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(index));
    }
    else {
        markers = (ArrayList) this.backgroundDomainMarkers.get(new Integer(index));
    }
    if (markers == null) {
        return false;
    }
    boolean removed = markers.remove(marker);
    if (removed && notify) {
        fireChangeEvent();
    }
    return removed;
}
