{
    "bug_id": "Compress-32",
    "success": true,
    "error": null,
    "patch": null,
    "project_path": "/tmp/d4j_Compress-32_1757918908",
    "patches": [
        {
            "hypothesis": "The bug is caused by attempting to parse a large group ID (greater than Integer.MAX_VALUE) using Integer.parseInt(), which results in a NumberFormatException. The fix is to use Long.parseLong() to handle large values properly for 'gid' and 'uid'.",
            "fixed_method": "private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {\n    for (Entry<String, String> ent : headers.entrySet()){\n        String key = ent.getKey();\n        String val = ent.getValue();\n        if (\"path\".equals(key)){\n            currEntry.setName(val);\n        } else if (\"linkpath\".equals(key)){\n            currEntry.setLinkName(val);\n        } else if (\"gid\".equals(key)){\n            currEntry.setGroupId(Long.parseLong(val));\n        } else if (\"gname\".equals(key)){\n            currEntry.setGroupName(val);\n        } else if (\"uid\".equals(key)){\n            currEntry.setUserId(Long.parseLong(val));\n        } else if (\"uname\".equals(key)){\n            currEntry.setUserName(val);\n        } else if (\"size\".equals(key)){\n            currEntry.setSize(Long.parseLong(val));\n        } else if (\"mtime\".equals(key)){\n            currEntry.setModTime((long) (Double.parseDouble(val) * 1000));\n        } else if (\"SCHILY.devminor\".equals(key)){\n            currEntry.setDevMinor(Integer.parseInt(val));\n        } else if (\"SCHILY.devmajor\".equals(key)){\n            currEntry.setDevMajor(Integer.parseInt(val));\n        }\n    }\n}",
            "diff": "--- original\n+++ fixed\n@@ -1,16 +1,4 @@\n-// Drop trailing NL\n private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {\n-    /*\n-     * The following headers are defined for Pax.\n-     * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields\n-     * mtime\n-     * comment\n-     * gid, gname\n-     * linkpath\n-     * size\n-     * uid,uname\n-     * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those\n-     */\n     for (Entry<String, String> ent : headers.entrySet()){\n         String key = ent.getKey();\n         String val = ent.getValue();\n@@ -19,11 +7,11 @@\n         } else if (\"linkpath\".equals(key)){\n             currEntry.setLinkName(val);\n         } else if (\"gid\".equals(key)){\n-            currEntry.setGroupId(Integer.parseInt(val));\n+            currEntry.setGroupId(Long.parseLong(val));\n         } else if (\"gname\".equals(key)){\n             currEntry.setGroupName(val);\n         } else if (\"uid\".equals(key)){\n-            currEntry.setUserId(Integer.parseInt(val));\n+            currEntry.setUserId(Long.parseLong(val));\n         } else if (\"uname\".equals(key)){\n             currEntry.setUserName(val);\n         } else if (\"size\".equals(key)){\n",
            "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java",
            "method_name": "applyPaxHeadersToCurrentEntry",
            "class_name": "TarArchiveInputStream",
            "iteration": 1,
            "is_multi_method": false,
            "line_numbers": [
                481,
                482,
                483,
                484,
                485,
                486,
                487,
                488,
                489,
                490,
                491,
                492,
                493,
                494,
                495,
                496,
                497,
                498,
                499,
                500,
                501,
                502,
                503,
                504,
                505,
                506,
                507,
                508,
                509,
                510,
                511,
                512,
                513,
                514,
                515,
                516,
                517,
                518
            ],
            "original_code": "// Drop trailing NL\nprivate void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {\n    /*\n     * The following headers are defined for Pax.\n     * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields\n     * mtime\n     * comment\n     * gid, gname\n     * linkpath\n     * size\n     * uid,uname\n     * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those\n     */\n    for (Entry<String, String> ent : headers.entrySet()){\n        String key = ent.getKey();\n        String val = ent.getValue();\n        if (\"path\".equals(key)){\n            currEntry.setName(val);\n        } else if (\"linkpath\".equals(key)){\n            currEntry.setLinkName(val);\n        } else if (\"gid\".equals(key)){\n            currEntry.setGroupId(Integer.parseInt(val));\n        } else if (\"gname\".equals(key)){\n            currEntry.setGroupName(val);\n        } else if (\"uid\".equals(key)){\n            currEntry.setUserId(Integer.parseInt(val));\n        } else if (\"uname\".equals(key)){\n            currEntry.setUserName(val);\n        } else if (\"size\".equals(key)){\n            currEntry.setSize(Long.parseLong(val));\n        } else if (\"mtime\".equals(key)){\n            currEntry.setModTime((long) (Double.parseDouble(val) * 1000));\n        } else if (\"SCHILY.devminor\".equals(key)){\n            currEntry.setDevMinor(Integer.parseInt(val));\n        } else if (\"SCHILY.devmajor\".equals(key)){\n            currEntry.setDevMajor(Integer.parseInt(val));\n        }\n    }\n}"
        }
    ],
    "iterations": 1,
    "monitor_file": "traces/Compress-32_trace.json"
}